version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/kpdotcom
    docker:
      - image: cimg/ruby:2.7.4-browsers
        environment:
          BUNDLER_VERSION: 2.2.23
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: eca569d89e2a8d954a3e28ef958ce10e912eef6570bbdabbb28297e11948efa8
      - image: circleci/postgres:11.7
        environment:
          POSTGRES_USER: kpdotcom
          POSTGRES_DB: kpdotcom_test
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler -v 2.2.23
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - kpdotcom-bundle{{ checksum "Gemfile.lock" }}
            - kpdotcom-bundle-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: kpdotcom-bundle{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash && $HOME/.yarn/bin/yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Asset compilation
          command: bundle exec rake assets:precompile
      - run:
          name: Run rspec in parallel
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            bundle exec rspec --profile 10 \
            --color \
            --format documentation \
            --out test_results/rspec.xml \
            --format progress \
            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test-artifacts

  upload-coverage:
    docker:
      - image: cimg/ruby:2.7.4-browsers
    environment:
      CC_TEST_REPORTER_ID: eca569d89e2a8d954a3e28ef958ce10e912eef6570bbdabbb28297e11948efa8
    working_directory: ~/kpdotcom
    steps:
      - attach_workspace:
          at: ~/kpdotcom
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Upload Coverage Report to Code Climate
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2
  commit:
    jobs:
      - build
      - upload-coverage:
          requires:
            - build
